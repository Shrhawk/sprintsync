# Docker Compose for SprintSync development with live reload

version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: sprintsync
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    logging:
      driver: awslogs
      options:
        awslogs-group: "/sprintsync/dev/database"
        awslogs-region: "${AWS_REGION:-us-east-1}"
        awslogs-stream: "postgres-${HOSTNAME:-dev}"
        awslogs-create-group: "true"

  # FastAPI Backend with live reload
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/sprintsync
      - SECRET_KEY=dev-secret-key-change-in-production
      - ENVIRONMENT=development
      - ALLOWED_HOSTS_STR=http://localhost:3000,http://localhost:8000,http://frontend
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app
      - /app/__pycache__
    depends_on:
      db:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    restart: unless-stopped
    logging:
      driver: awslogs
      options:
        awslogs-group: "/sprintsync/dev/backend"
        awslogs-region: "${AWS_REGION:-us-east-1}"
        awslogs-stream: "fastapi-${HOSTNAME:-dev}"
        awslogs-create-group: "true"

  # React Frontend with live reload
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=${VITE_API_BASE_URL:-http://localhost:8000}
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    depends_on:
      - backend
    command: ["npm", "run", "dev", "--", "--host", "0.0.0.0"]
    logging:
      driver: awslogs
      options:
        awslogs-group: "/sprintsync/dev/frontend"
        awslogs-region: "${AWS_REGION:-us-east-1}"
        awslogs-stream: "react-dev-${HOSTNAME:-dev}"
        awslogs-create-group: "true"

volumes:
  postgres_data:
  frontend_node_modules:
